{
  "contracts": {
    "TokenMock": {
      "address": "0x902C2B9184A45011070A26545b475A4A54bBfeF0",
      "constructorCode": "6080604052611481806100136000396000f3fe",
      "bodyBytecodeHash": "f90e1007c7067c9dce26f6e78d10b9171ba199d2f88294694af881bf5e479b36",
      "localBytecodeHash": "3907e71f3d5cede048a96ae4b2101fd3375329c9d424adec5d76964126db4f3a",
      "deployedBytecodeHash": "3907e71f3d5cede048a96ae4b2101fd3375329c9d424adec5d76964126db4f3a",
      "types": {
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        }
      },
      "storage": [
        {
          "contract": "ERC20",
          "path": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "label": "_balances",
          "astId": 229,
          "type": "t_mapping<t_uint256>",
          "src": "1341:46:2"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "label": "_allowances",
          "astId": 235,
          "type": "t_mapping<t_uint256>",
          "src": "1394:69:2"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "label": "_totalSupply",
          "astId": 237,
          "type": "t_uint256",
          "src": "1470:28:2"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin/upgrades/contracts/Initializable.sol",
          "label": "initialized",
          "astId": 691,
          "type": "t_bool",
          "src": "757:24:4"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin/upgrades/contracts/Initializable.sol",
          "label": "initializing",
          "astId": 693,
          "type": "t_bool",
          "src": "876:25:4"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin/upgrades/contracts/Initializable.sol",
          "label": "______gap",
          "astId": 755,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:4"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "importsVanillaContracts": [
          "token/ERC20/ERC20.sol",
          "GSN/Context.sol",
          "token/ERC20/IERC20.sol",
          "math/SafeMath.sol"
        ],
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [],
        "storageDiff": [
          {
            "action": "pop",
            "original": {
              "index": 6,
              "contract": "TokenMock",
              "path": "contracts/mocks/TokenMock.sol",
              "label": "owner",
              "astId": 2969,
              "type": "t_address",
              "src": "932:13:14"
            }
          }
        ]
      }
    },
    "PooledStaking": {
      "address": "0x0DfC78Ef090902A6c33c1999Bc44De8fc8a01cB1",
      "constructorCode": "608060405234801561001057600080fd5b506156d4806100206000396000f3fe",
      "bodyBytecodeHash": "56444e5aa00749a72f579d8a872398cc8b7d2e14c127dc128b77f9437670fb16",
      "localBytecodeHash": "4ea32c022d82a2f0730a4b8e9ebef9864d35617fcc789c3408cff3a58918d7a8",
      "deployedBytecodeHash": "4ea32c022d82a2f0730a4b8e9ebef9864d35617fcc789c3408cff3a58918d7a8",
      "types": {
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:dyn<t_address>": {
          "id": "t_array:dyn<t_address>",
          "valueType": "t_address",
          "length": "dyn",
          "kind": "array",
          "label": "address[]"
        },
        "t_struct<PooledStaking.Staker>": {
          "id": "t_struct<PooledStaking.Staker>",
          "kind": "struct",
          "label": "PooledStaking.Staker",
          "members": [
            {
              "label": "staked",
              "astId": 777,
              "type": "t_uint256",
              "src": "1204:11:5"
            },
            {
              "label": "reward",
              "astId": 779,
              "type": "t_uint256",
              "src": "1251:11:5"
            },
            {
              "label": "contracts",
              "astId": 782,
              "type": "t_array:dyn<t_address>",
              "src": "1312:19:5"
            },
            {
              "label": "allocations",
              "astId": 786,
              "type": "t_mapping<t_uint256>",
              "src": "1433:36:5"
            },
            {
              "label": "pendingDeallocations",
              "astId": 790,
              "type": "t_mapping<t_uint256>",
              "src": "1557:45:5"
            }
          ]
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_mapping<t_struct<PooledStaking.Staker>>": {
          "id": "t_mapping<t_struct<PooledStaking.Staker>>",
          "valueType": "t_struct<PooledStaking.Staker>",
          "label": "mapping(key => PooledStaking.Staker)",
          "kind": "mapping"
        },
        "t_struct<PooledStaking.Contract>": {
          "id": "t_struct<PooledStaking.Contract>",
          "kind": "struct",
          "label": "PooledStaking.Contract",
          "members": [
            {
              "label": "staked",
              "astId": 793,
              "type": "t_uint256",
              "src": "1633:11:5"
            },
            {
              "label": "burned",
              "astId": 795,
              "type": "t_uint256",
              "src": "1692:11:5"
            },
            {
              "label": "stakers",
              "astId": 798,
              "type": "t_array:dyn<t_address>",
              "src": "1798:17:5"
            }
          ]
        },
        "t_mapping<t_struct<PooledStaking.Contract>>": {
          "id": "t_mapping<t_struct<PooledStaking.Contract>>",
          "valueType": "t_struct<PooledStaking.Contract>",
          "label": "mapping(key => PooledStaking.Contract)",
          "kind": "mapping"
        },
        "t_struct<PooledStaking.Burn>": {
          "id": "t_struct<PooledStaking.Burn>",
          "kind": "struct",
          "label": "PooledStaking.Burn",
          "members": [
            {
              "label": "amount",
              "astId": 801,
              "type": "t_uint256",
              "src": "1864:11:5"
            },
            {
              "label": "burnedAt",
              "astId": 803,
              "type": "t_uint256",
              "src": "1881:13:5"
            },
            {
              "label": "contractAddress",
              "astId": 805,
              "type": "t_address",
              "src": "1900:23:5"
            }
          ]
        },
        "t_mapping<t_struct<PooledStaking.Burn>>": {
          "id": "t_mapping<t_struct<PooledStaking.Burn>>",
          "valueType": "t_struct<PooledStaking.Burn>",
          "label": "mapping(key => PooledStaking.Burn)",
          "kind": "mapping"
        },
        "t_struct<PooledStaking.Reward>": {
          "id": "t_struct<PooledStaking.Reward>",
          "kind": "struct",
          "label": "PooledStaking.Reward",
          "members": [
            {
              "label": "amount",
              "astId": 808,
              "type": "t_uint256",
              "src": "1952:11:5"
            },
            {
              "label": "rewardedAt",
              "astId": 810,
              "type": "t_uint256",
              "src": "1969:15:5"
            },
            {
              "label": "contractAddress",
              "astId": 812,
              "type": "t_address",
              "src": "1990:23:5"
            }
          ]
        },
        "t_mapping<t_struct<PooledStaking.Reward>>": {
          "id": "t_mapping<t_struct<PooledStaking.Reward>>",
          "valueType": "t_struct<PooledStaking.Reward>",
          "label": "mapping(key => PooledStaking.Reward)",
          "kind": "mapping"
        },
        "t_struct<PooledStaking.Deallocation>": {
          "id": "t_struct<PooledStaking.Deallocation>",
          "kind": "struct",
          "label": "PooledStaking.Deallocation",
          "members": [
            {
              "label": "amount",
              "astId": 815,
              "type": "t_uint256",
              "src": "2048:11:5"
            },
            {
              "label": "deallocateAt",
              "astId": 817,
              "type": "t_uint256",
              "src": "2065:17:5"
            },
            {
              "label": "contractAddress",
              "astId": 819,
              "type": "t_address",
              "src": "2088:23:5"
            },
            {
              "label": "stakerAddress",
              "astId": 821,
              "type": "t_address",
              "src": "2117:21:5"
            },
            {
              "label": "next",
              "astId": 823,
              "type": "t_uint256",
              "src": "2144:9:5"
            }
          ]
        },
        "t_mapping<t_struct<PooledStaking.Deallocation>>": {
          "id": "t_mapping<t_struct<PooledStaking.Deallocation>>",
          "valueType": "t_struct<PooledStaking.Deallocation>",
          "label": "mapping(key => PooledStaking.Deallocation)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "MasterAware",
          "path": "contracts/abstract/MasterAware.sol",
          "label": "master",
          "astId": 2756,
          "type": "t_address",
          "src": "844:24:6"
        },
        {
          "contract": "PooledStaking",
          "path": "contracts/PooledStaking.sol",
          "label": "initialized",
          "astId": 886,
          "type": "t_bool",
          "src": "2997:16:5"
        },
        {
          "contract": "PooledStaking",
          "path": "contracts/PooledStaking.sol",
          "label": "token",
          "astId": 888,
          "type": "t_address",
          "src": "3018:14:5"
        },
        {
          "contract": "PooledStaking",
          "path": "contracts/PooledStaking.sol",
          "label": "tokenController",
          "astId": 890,
          "type": "t_address",
          "src": "3036:32:5"
        },
        {
          "contract": "PooledStaking",
          "path": "contracts/PooledStaking.sol",
          "label": "MIN_ALLOCATION",
          "astId": 892,
          "type": "t_uint256",
          "src": "3073:26:5"
        },
        {
          "contract": "PooledStaking",
          "path": "contracts/PooledStaking.sol",
          "label": "MAX_LEVERAGE",
          "astId": 894,
          "type": "t_uint256",
          "src": "3151:24:5"
        },
        {
          "contract": "PooledStaking",
          "path": "contracts/PooledStaking.sol",
          "label": "MIN_ALLOWED_DEALLOCATION",
          "astId": 896,
          "type": "t_uint256",
          "src": "3255:36:5"
        },
        {
          "contract": "PooledStaking",
          "path": "contracts/PooledStaking.sol",
          "label": "DEALLOCATE_LOCK_TIME",
          "astId": 898,
          "type": "t_uint256",
          "src": "3351:32:5"
        },
        {
          "contract": "PooledStaking",
          "path": "contracts/PooledStaking.sol",
          "label": "BURN_CYCLE_GAS_LIMIT",
          "astId": 900,
          "type": "t_uint256",
          "src": "3446:32:5"
        },
        {
          "contract": "PooledStaking",
          "path": "contracts/PooledStaking.sol",
          "label": "DEALLOCATION_CYCLE_GAS_LIMIT",
          "astId": 902,
          "type": "t_uint256",
          "src": "3482:40:5"
        },
        {
          "contract": "PooledStaking",
          "path": "contracts/PooledStaking.sol",
          "label": "REWARD_CYCLE_GAS_LIMIT",
          "astId": 904,
          "type": "t_uint256",
          "src": "3526:34:5"
        },
        {
          "contract": "PooledStaking",
          "path": "contracts/PooledStaking.sol",
          "label": "contractAddresses",
          "astId": 907,
          "type": "t_array:dyn<t_address>",
          "src": "3611:34:5"
        },
        {
          "contract": "PooledStaking",
          "path": "contracts/PooledStaking.sol",
          "label": "stakers",
          "astId": 911,
          "type": "t_mapping<t_struct<PooledStaking.Staker>>",
          "src": "3650:41:5"
        },
        {
          "contract": "PooledStaking",
          "path": "contracts/PooledStaking.sol",
          "label": "contracts",
          "astId": 915,
          "type": "t_mapping<t_struct<PooledStaking.Contract>>",
          "src": "3726:45:5"
        },
        {
          "contract": "PooledStaking",
          "path": "contracts/PooledStaking.sol",
          "label": "burns",
          "astId": 919,
          "type": "t_mapping<t_struct<PooledStaking.Burn>>",
          "src": "3807:34:5"
        },
        {
          "contract": "PooledStaking",
          "path": "contracts/PooledStaking.sol",
          "label": "firstBurn",
          "astId": 921,
          "type": "t_uint256",
          "src": "3864:21:5"
        },
        {
          "contract": "PooledStaking",
          "path": "contracts/PooledStaking.sol",
          "label": "lastBurnId",
          "astId": 923,
          "type": "t_uint256",
          "src": "3964:22:5"
        },
        {
          "contract": "PooledStaking",
          "path": "contracts/PooledStaking.sol",
          "label": "rewards",
          "astId": 927,
          "type": "t_mapping<t_struct<PooledStaking.Reward>>",
          "src": "3991:38:5"
        },
        {
          "contract": "PooledStaking",
          "path": "contracts/PooledStaking.sol",
          "label": "firstReward",
          "astId": 929,
          "type": "t_uint256",
          "src": "4056:23:5"
        },
        {
          "contract": "PooledStaking",
          "path": "contracts/PooledStaking.sol",
          "label": "lastRewardId",
          "astId": 931,
          "type": "t_uint256",
          "src": "4083:24:5"
        },
        {
          "contract": "PooledStaking",
          "path": "contracts/PooledStaking.sol",
          "label": "deallocations",
          "astId": 935,
          "type": "t_mapping<t_struct<PooledStaking.Deallocation>>",
          "src": "4112:50:5"
        },
        {
          "contract": "PooledStaking",
          "path": "contracts/PooledStaking.sol",
          "label": "lastDeallocationId",
          "astId": 937,
          "type": "t_uint256",
          "src": "4259:30:5"
        },
        {
          "contract": "PooledStaking",
          "path": "contracts/PooledStaking.sol",
          "label": "processedToStakerIndex",
          "astId": 939,
          "type": "t_uint256",
          "src": "4294:34:5"
        },
        {
          "contract": "PooledStaking",
          "path": "contracts/PooledStaking.sol",
          "label": "processedToContractIndex",
          "astId": 941,
          "type": "t_uint256",
          "src": "4374:36:5"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "importsVanillaContracts": [
          "math/SafeMath.sol",
          "token/ERC20/IERC20.sol"
        ],
        "uninitializedBaseContracts": []
      }
    },
    "MasterMock": {
      "address": "0x76D70969607FA2FF79858da8Edb0cbE452339ecB",
      "constructorCode": "608060405234801561001057600080fd5b50610c3f806100206000396000f3fe",
      "bodyBytecodeHash": "ce4394530051100833e64484359eb1d30f1f8bd34ca2609cd252135e953e0236",
      "localBytecodeHash": "f69e16d937712bd7f1af5d66238c6bc2ac0bcf6f2cfc5b7016efedceecd8ae18",
      "deployedBytecodeHash": "f69e16d937712bd7f1af5d66238c6bc2ac0bcf6f2cfc5b7016efedceecd8ae18",
      "types": {
        "t_enum<MasterMock.Role>": {
          "id": "t_enum<MasterMock.Role>",
          "kind": "enum",
          "label": "MasterMock.Role",
          "members": [
            "NonMember",
            "Member",
            "AdvisoryBord",
            "Owner"
          ]
        },
        "t_mapping<t_enum<MasterMock.Role>>": {
          "id": "t_mapping<t_enum<MasterMock.Role>>",
          "valueType": "t_enum<MasterMock.Role>",
          "label": "mapping(key => MasterMock.Role)",
          "kind": "mapping"
        },
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_address_payable": {
          "id": "t_address_payable",
          "kind": "elementary",
          "label": "address payable"
        },
        "t_mapping<t_address_payable>": {
          "id": "t_mapping<t_address_payable>",
          "valueType": "t_address_payable",
          "label": "mapping(key => address payable)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "MasterMock",
          "path": "contracts/mocks/MasterMock.sol",
          "label": "members",
          "astId": 2991,
          "type": "t_mapping<t_enum<MasterMock.Role>>",
          "src": "874:32:11"
        },
        {
          "contract": "MasterMock",
          "path": "contracts/mocks/MasterMock.sol",
          "label": "internalAddresses",
          "astId": 2995,
          "type": "t_mapping<t_bool>",
          "src": "910:42:11"
        },
        {
          "contract": "MasterMock",
          "path": "contracts/mocks/MasterMock.sol",
          "label": "governanceAddresses",
          "astId": 2999,
          "type": "t_mapping<t_bool>",
          "src": "956:44:11"
        },
        {
          "contract": "MasterMock",
          "path": "contracts/mocks/MasterMock.sol",
          "label": "contractAddresses",
          "astId": 3003,
          "type": "t_mapping<t_address_payable>",
          "src": "1004:52:11"
        },
        {
          "contract": "MasterMock",
          "path": "contracts/mocks/MasterMock.sol",
          "label": "paused",
          "astId": 3005,
          "type": "t_bool",
          "src": "1061:11:11"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    }
  },
  "solidityLibs": {},
  "proxies": {
    "pooled-staking/TokenMock": [
      {
        "address": "0x63d7bdcBF76e67B364963FC4f3BccCcDE571cF83",
        "version": "1.0.0",
        "implementation": "0xAba9a4D0794c2DBfD47d1215052801aB0EA927dD",
        "admin": "0x63519146182e2E33F0Ec39e40D2d0689a44d8f47",
        "kind": "Upgradeable"
      }
    ],
    "pooled-staking/MasterMock": [
      {
        "address": "0x4cf5a67cddcaD44af90f81757408fc0ae61FC372",
        "version": "1.0.0",
        "implementation": "0x76D70969607FA2FF79858da8Edb0cbE452339ecB",
        "admin": "0x63519146182e2E33F0Ec39e40D2d0689a44d8f47",
        "kind": "Upgradeable"
      }
    ],
    "pooled-staking/TokenControllerMock": [
      {
        "address": "0xDC7280c864ebCbe32a69fF016B1f95Cc52e65309",
        "kind": "NonProxy",
        "bytecodeHash": "ff6489c4cd596a0a5fbb7cf0a5449b37f19aed57cf14bf54df5225c031db694c"
      }
    ],
    "pooled-staking/PooledStaking": [
      {
        "address": "0x9DC67c0d7D13B1d506446462B620a342fe895177",
        "kind": "NonProxy",
        "bytecodeHash": "4ea32c022d82a2f0730a4b8e9ebef9864d35617fcc789c3408cff3a58918d7a8"
      }
    ]
  },
  "manifestVersion": "2.2",
  "version": "1.0.0",
  "proxyAdmin": {
    "address": "0x63519146182e2E33F0Ec39e40D2d0689a44d8f47"
  }
}
